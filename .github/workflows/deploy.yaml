name: Deploy Gj-pod-test

on:
  push:
    branches: gaurav

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  GCR: us-east1-docker.pkg.dev # GCR artifactory
  IMAGE: l-ulti-tf-48hours-d55d/ukg-48h-humanitec/myapp # image path

jobs:
  deploy:
    name: Build & Notify Humanitec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set Tag with SHA
        run: echo "TAG=`echo $GITHUB_SHA | cut -c 1-7`" >> $GITHUB_ENV
      
      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: us-east1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - run: docker build --platform linux/amd64 . -t $GCR/$IMAGE:$TAG
      - run: docker push $GCR/$IMAGE:$TAG

      - name: Inform Humanitec
        run: |-
          curl \
            --request POST 'https://api.humanitec.io/orgs/${{ secrets.HUMANITEC_ORG_ID_UKG_48_HRS }}/images/myapp/builds' \
            --header 'Authorization: Bearer ${{ secrets.HUMANITEC_TOKEN_UKG_48_HRS }}' \
            --header 'Content-Type: application/json' \
            --data-raw '{
                "branch": "'$GITHUB_REF_NAME'",
                "commit": "'$GITHUB_SHA'",
                "image": "'$GCR/$IMAGE:$TAG'",
                "tags": ["'$TAG'"]
            }'
      - name: Deploy using Score
        run: |
          wget https://github.com/score-spec/score-humanitec/releases/download/0.4.0/score-humanitec_0.4.0_linux_amd64.tar.gz
          tar -xvzf ./score-humanitec_0.4.0_linux_amd64.tar.gz

          cat <<EOF > humanitec.score.yaml
          apiVersion: humanitec.org/v1b1
          spec:
            labels:
              env_type: development

          containers:
            frontend:
              image: $GCR/$IMAGE:$TAG

          EOF

          ./score-humanitec delta --env development --overrides ./humanitec.score.yaml --app test --org="${{ secrets.HUMANITEC_ORG_ID_UKG_48_HRS }}" --token "${{ secrets.HUMANITEC_TOKEN_UKG_48_HRS }}" --deploy
